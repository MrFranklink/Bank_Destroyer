@{
    ViewBag.Title = "Change Password";
    Layout = "~/Views/Shared/Template.cshtml";
    string role = Session["Role"]?.ToString().ToUpper() ?? "USER";
    bool isManager = role == "MANAGER";
    bool isEmployee = role == "EMPLOYEE";
    bool isCustomer = role == "CUSTOMER";
}

<style>
    :root {
        --manager-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        --employee-gradient: linear-gradient(135deg, #f857a6 0%, #ff5858 100%);
        --customer-gradient: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
    }

    body {
        background: @(isManager ? "var(--manager-gradient)" : isEmployee ? "var(--employee-gradient)" : "var(--customer-gradient)");
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .change-password-container {
        max-width: 500px;
        width: 100%;
        padding: 20px;
    }

    .password-card {
        background: white;
        border-radius: 20px;
        padding: 2.5rem;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
        animation: slideInUp 0.5s ease;
    }

    @@keyframes slideInUp {
        from {
            opacity: 0;
            transform: translateY(50px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .password-header {
        text-align: center;
        margin-bottom: 2rem;
    }

    .password-icon {
        width: 80px;
        height: 80px;
        margin: 0 auto 1rem;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 2.5rem;
        background: @(isManager ? "var(--manager-gradient)" : isEmployee ? "var(--employee-gradient)" : "var(--customer-gradient)");
        color: white;
    }

    .form-control {
        border-radius: 10px;
        border: 2px solid #e9ecef;
        padding: 0.75rem 1rem;
        transition: all 0.3s ease;
    }

    .form-control:focus {
        border-color: @(isManager ? "#667eea" : isEmployee ? "#f857a6" : "#11998e");
        box-shadow: 0 0 0 0.2rem @(isManager ? "rgba(102, 126, 234, 0.25)" : isEmployee ? "rgba(248, 87, 166, 0.25)" : "rgba(17, 153, 142, 0.25)");
    }

    .btn-change {
        background: @(isManager ? "var(--manager-gradient)" : isEmployee ? "var(--employee-gradient)" : "var(--customer-gradient)");
        border: none;
        border-radius: 10px;
        padding: 0.75rem 2rem;
        font-weight: 600;
        color: white;
        transition: all 0.3s ease;
        width: 100%;
    }

    .btn-change:hover {
        transform: translateY(-3px);
        box-shadow: 0 7px 20px rgba(0, 0, 0, 0.2);
    }

    .btn-back {
        background: linear-gradient(135deg, #6c757d 0%, #495057 100%);
        border: none;
        border-radius: 10px;
        padding: 0.75rem 2rem;
        font-weight: 600;
        color: white;
        transition: all 0.3s ease;
        width: 100%;
        margin-top: 1rem;
    }

    .btn-back:hover {
        transform: translateY(-3px);
        box-shadow: 0 7px 20px rgba(0, 0, 0, 0.2);
    }

    .password-requirement {
        font-size: 0.85rem;
        color: #6c757d;
        margin-top: 0.5rem;
    }

    .alert {
        border-radius: 10px;
        border: none;
        box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
    }
</style>

<div class="change-password-container">
    <div class="password-card">
        <div class="password-header">
            <div class="password-icon">
                <i class="bi bi-shield-lock"></i>
            </div>
            <h3 class="mb-2">Change Password</h3>
            <p class="text-muted">Update your account password</p>
        </div>

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <i class="bi bi-check-circle-fill me-2"></i>
                @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <i class="bi bi-exclamation-triangle-fill me-2"></i>
                @TempData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        <form method="post" action="@Url.Action("ChangePassword", "Dashboard")">
            <div class="mb-3">
                <label class="form-label">
                    <i class="bi bi-lock"></i> Current Password *
                </label>
                <input type="password" name="oldPassword" class="form-control" placeholder="Enter current password" required autofocus />
            </div>

            <div class="mb-3">
                <label class="form-label">
                    <i class="bi bi-key"></i> New Password *
                </label>
                <input type="password" name="newPassword" class="form-control" placeholder="Enter new password" required minlength="6" />
                <div class="password-requirement">
                    <i class="bi bi-info-circle"></i> Minimum 6 characters
                </div>
            </div>

            <div class="mb-4">
                <label class="form-label">
                    <i class="bi bi-key-fill"></i> Confirm New Password *
                </label>
                <input type="password" name="confirmNewPassword" class="form-control" placeholder="Re-enter new password" required minlength="6" />
            </div>

            <button type="submit" class="btn btn-change">
                <i class="bi bi-check-circle"></i> Change Password
            </button>

            <a href="@Url.Action("Index", "Dashboard")" class="btn btn-back">
                <i class="bi bi-arrow-left"></i> Back to Dashboard
            </a>
        </form>
    </div>
</div>

<script>
    // Client-side password match validation
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.querySelector('form');
        const newPassword = document.querySelector('input[name="newPassword"]');
        const confirmPassword = document.querySelector('input[name="confirmNewPassword"]');

        form.addEventListener('submit', function(e) {
            if (newPassword.value !== confirmPassword.value) {
                e.preventDefault();
                alert('New passwords do not match!');
                confirmPassword.focus();
            }
        });
    });
</script>
