@using BankApp.Services
@{
    ViewBag.Title = "Customer Dashboard";
    Layout = "~/Views/Shared/Template.cshtml";
}

@section styles {
    <style>
        /* Top Navbar */
        .navbar-custom {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            padding: 1rem 0;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .navbar-brand {
            color: white !important;
            font-weight: 600;
            font-size: 1.5rem;
        }

        .navbar-custom .nav-link {
            color: rgba(255,255,255,0.9) !important;
            margin: 0 0.5rem;
            transition: all 0.3s ease;
        }

        .navbar-custom .nav-link:hover {
            color: white !important;
            transform: translateY(-2px);
        }

        .user-dropdown {
            background-color: rgba(255,255,255,0.2);
            border-radius: 25px;
            padding: 0.5rem 1rem;
            color: white;
            border: none;
        }

        .user-dropdown:hover {
            background-color: rgba(255,255,255,0.3);
        }

        /* Hero Section */
        .hero-section {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 3rem 0 2rem;
            margin-bottom: 2rem;
        }

        .hero-section h1 {
            font-size: 2rem;
            font-weight: 600;
            margin-bottom: 1rem;
        }

        .balance-display {
            background-color: rgba(255,255,255,0.15);
            border-radius: 15px;
            padding: 1.5rem;
            text-align: center;
            backdrop-filter: blur(10px);
            margin: 1.5rem 0;
        }

        .balance-display h2 {
            font-size: 2.5rem;
            font-weight: 700;
            margin: 0;
        }

        .balance-display small {
            opacity: 0.9;
            font-size: 0.9rem;
        }

        .quick-stats {
            display: flex;
            gap: 2rem;
            justify-content: center;
            margin-top: 1.5rem;
        }

        .quick-stats .stat {
            text-align: center;
        }

        .quick-stats .stat i {
            font-size: 1.5rem;
            margin-bottom: 0.5rem;
        }

        /* Quick Actions */
        .quick-actions {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin-bottom: 2rem;
        }

        .action-btn {
            background: white;
            border: none;
            border-radius: 15px;
            padding: 1.5rem;
            text-align: center;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
            cursor: pointer;
            text-decoration: none;
            color: inherit;
        }

        .action-btn:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 20px rgba(0,0,0,0.15);
        }

        .action-btn i {
            font-size: 2.5rem;
            margin-bottom: 0.5rem;
            display: block;
        }

        .action-btn.transfer { color: #6f42c1; }
        .action-btn.emi { color: #198754; }
        .action-btn.history { color: #0dcaf0; }

        /* Account Cards */
        .account-cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .account-card {
            border-radius: 15px;
            padding: 1.5rem;
            color: white;
            position: relative;
            overflow: hidden;
        }

        .account-card::before {
            content: '';
            position: absolute;
            top: -50%;
            right: -50%;
            width: 200%;
            height: 200%;
            background: rgba(255,255,255,0.1);
            transform: rotate(45deg);
            transition: all 0.3s ease;
        }

        .account-card:hover::before {
            top: -100%;
            right: -100%;
        }

        .account-card.savings {
            background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
        }

        .account-card.fd {
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
        }

        .account-card.loan {
            background: linear-gradient(135deg, #fa709a 0%, #fee140 100%);
        }

        .account-card h5 {
            font-size: 1.1rem;
            margin-bottom: 0.5rem;
            opacity: 0.9;
        }

        .account-card .account-number {
            font-size: 0.9rem;
            opacity: 0.8;
            margin-bottom: 1rem;
        }

        .account-card .amount {
            font-size: 2rem;
            font-weight: 700;
        }

        /* Content Sections */
        .content-section {
            background: white;
            border-radius: 15px;
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }

        .content-section h3 {
            font-size: 1.5rem;
            font-weight: 600;
            margin-bottom: 1.5rem;
            color: #212529;
        }

        /* Nav Pills */
        .nav-pills .nav-link {
            border-radius: 10px;
            color: #6c757d;
            font-weight: 500;
            margin-right: 0.5rem;
        }

        .nav-pills .nav-link.active {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }

        /* Form Styles */
        .form-floating > label {
            color: #6c757d;
        }

        /* Transaction List */
        .transaction-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1rem;
            border-bottom: 1px solid #f0f0f0;
            transition: all 0.3s ease;
        }

        .transaction-item:hover {
            background-color: #f8f9fa;
            transform: translateX(5px);
        }

        .transaction-item:last-child {
            border-bottom: none;
        }

        .transaction-item.newest {
            animation: highlightNew 2s ease-in-out;
            background-color: #fff3cd;
        }

        @@keyframes highlightNew {
            0% {
                background-color: #d4edda;
                transform: scale(1.02);
            }
            50% {
                background-color: #fff3cd;
            }
            100% {
                background-color: transparent;
                transform: scale(1);
            }
        }

        .transaction-icon {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 1rem;
        }

        .transaction-icon.credit {
            background-color: #d4edda;
            color: #198754;
        }

        .transaction-icon.debit {
            background-color: #f8d7da;
            color: #dc3545;
        }

        .transaction-amount.credit {
            color: #198754;
            font-weight: 600;
        }

        .transaction-amount.debit {
            color: #dc3545;
            font-weight: 600;
        }

        /* Info Table */
        .info-table {
            width: 100%;
        }

        .info-table tr {
            border-bottom: 1px solid #f0f0f0;
        }

        .info-table td {
            padding: 0.75rem 0;
        }

        .info-table td:first-child {
            color: #6c757d;
            font-weight: 500;
        }

        /* Empty State Styles */
        .empty-state {
            text-align: center;
            padding: 4rem 2rem;
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border-radius: 20px;
            margin: 2rem 0;
        }

        .empty-state-icon {
            width: 120px;
            height: 120px;
            margin: 0 auto 2rem;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            animation: float 3s ease-in-out infinite;
        }

        .empty-state-icon i {
            font-size: 3.5rem;
            color: white;
        }

        @@keyframes float {
            0%, 100% {
                transform: translateY(0px);
            }
            50% {
                transform: translateY(-10px);
            }
        }

        .empty-state h3 {
            font-size: 1.8rem;
            font-weight: 600;
            color: #212529;
            margin-bottom: 1rem;
        }

        .empty-state p {
            font-size: 1.1rem;
            color: #6c757d;
            max-width: 600px;
            margin: 0 auto 2rem;
            line-height: 1.6;
        }

        .empty-state-actions {
            display: flex;
            gap: 1rem;
            justify-content: center;
            flex-wrap: wrap;
        }

        .empty-state-card {
            background: white;
            border-radius: 15px;
            padding: 2rem;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            min-width: 250px;
            transition: all 0.3s ease;
        }

        .empty-state-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        }

        .empty-state-card i {
            font-size: 2.5rem;
            margin-bottom: 1rem;
            display: block;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .empty-state-card h5 {
            font-size: 1.1rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
            color: #212529;
        }

        .empty-state-card p {
            font-size: 0.9rem;
            color: #6c757d;
            margin-bottom: 0;
        }

        /* Welcome Banner for New Customers */
        .welcome-banner {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 20px;
            padding: 3rem;
            text-align: center;
            margin-bottom: 2rem;
            position: relative;
            overflow: hidden;
        }

        .welcome-banner::before {
            content: '';
            position: absolute;
            top: -50%;
            right: -10%;
            width: 300px;
            height: 300px;
            background: rgba(255,255,255,0.1);
            border-radius: 50%;
        }

        .welcome-banner::after {
            content: '';
            position: absolute;
            bottom: -30%;
            left: -5%;
            width: 200px;
            height: 200px;
            background: rgba(255,255,255,0.1);
            border-radius: 50%;
        }

        .welcome-banner h2 {
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 1rem;
            position: relative;
            z-index: 1;
        }

        .welcome-banner p {
            font-size: 1.2rem;
            opacity: 0.95;
            margin-bottom: 2rem;
            position: relative;
            z-index: 1;
        }

        .welcome-banner .btn {
            background: white;
            color: #667eea;
            border: none;
            padding: 1rem 2.5rem;
            font-weight: 600;
            border-radius: 50px;
            position: relative;
            z-index: 1;
            transition: all 0.3s ease;
        }

        .welcome-banner .btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
        }

        /* Responsive */
        @@media (max-width: 768px) {
            .hero-section h1 {
                font-size: 1.5rem;
            }

            .balance-display h2 {
                font-size: 2rem;
            }

            .quick-stats {
                gap: 1rem;
            }

            .account-cards {
                grid-template-columns: 1fr;
            }
        }
    </style>
}

<!-- Top Navbar -->
<nav class="navbar navbar-expand-lg navbar-custom fixed-top">
    <div class="container">
        <a class="navbar-brand" href="#">
            <i class="bi bi-bank2 me-2"></i>Banking System
        </a>
        
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
            <span class="navbar-toggler-icon"></span>
        </button>
        
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav ms-auto align-items-center">
                <li class="nav-item">
                    <a class="nav-link" href="#accounts">
                        <i class="bi bi-credit-card me-1"></i>Accounts
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#history" onclick="showSection('history'); return false;">
                        <i class="bi bi-clock-history me-1"></i>Transactions
                    </a>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle user-dropdown" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown">
                        <i class="bi bi-person-circle me-2"></i>@ViewBag.UserName
                    </a>
                    <ul class="dropdown-menu dropdown-menu-end">
                        <li><a class="dropdown-item" href="#profile" onclick="showSection('profile')"><i class="bi bi-person me-2"></i>My Profile</a></li>
                        <li><a class="dropdown-item" href="@Url.Action("ChangePassword", "Dashboard")"><i class="bi bi-key me-2"></i>Change Password</a></li>
                        <li><hr class="dropdown-divider"></li>
                        <li><a class="dropdown-item text-danger" href="@Url.Action("Logout", "Auth")"><i class="bi bi-box-arrow-right me-2"></i>Logout</a></li>
                    </ul>
                </li>
            </ul>
        </div>
    </div>
</nav>

<!-- Hero Section -->
<div class="hero-section" style="margin-top: 56px;">
    <div class="container">
        <h1>Welcome back, @ViewBag.UserName! 👋</h1>
        
        @if (ViewBag.CustomerAccounts != null && ((List<AccountDTO>)ViewBag.CustomerAccounts).Count > 0)
        {
            <div class="balance-display">
                <small>Your Savings Balance</small>
                <h2>₹ @((ViewBag.SavingsBalance ?? 0m).ToString("N2"))</h2>
            </div>
            
            <div class="quick-stats">
                <div class="stat">
                    <i class="bi bi-bank"></i>
                    <div><strong>@(ViewBag.TotalAccounts ?? 0)</strong></div>
                    <small>Active Accounts</small>
                </div>
                <div class="stat">
                    <i class="bi bi-graph-up"></i>
                    <div><strong>@(ViewBag.TransactionCount ?? 0)</strong></div>
                    <small>Transactions</small>
                </div>
                <div class="stat">
                    <i class="bi bi-calendar-check"></i>
                    <div><strong>@DateTime.Now.ToString("dd MMM")</strong></div>
                    <small>Today</small>
                </div>
            </div>
        }
        else
        {
            <div class="balance-display">
                <small>Get Started Today!</small>
                <h2>Open Your First Account</h2>
                <p class="mt-3 mb-0">Join thousands of satisfied customers. Visit your nearest branch to get started!</p>
            </div>
        }
    </div>
</div>

<!-- Main Content -->
<div class="container pb-5">
    <!-- Success/Error Alerts -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle-fill me-2"></i>
            <strong>Success!</strong> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle-fill me-2"></i>
            <strong>Error!</strong> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Account Balance Card - Only show if customer has accounts -->
    @if (ViewBag.CustomerAccounts != null && ((List<AccountDTO>)ViewBag.CustomerAccounts).Count > 0)
    {
        <div class="balance-card">
            <div class="row">
                <div class="col-md-8">
                    <h3>Your Account Balance</h3>
                    <div class="balance-display">
                        <h2>₹ @((ViewBag.SavingsBalance ?? 0m).ToString("N2"))</h2>
                        <small>Available Balance</small>
                    </div>
                </div>
                <div class="col-md-4 text-end">
                    <a href="#" class="btn btn-primary btn-lg" onclick="showSection('transfer'); return false;">
                        <i class="bi bi-arrow-right-circle me-2"></i>Transfer Funds
                    </a>
                </div>
            </div>
        </div>
    }

    <!-- Account Cards -->
    <div id="accounts" class="account-cards">
        @if (ViewBag.CustomerAccounts != null && ((List<AccountDTO>)ViewBag.CustomerAccounts).Count > 0)
        {
            foreach (var account in (List<AccountDTO>)ViewBag.CustomerAccounts)
            {
                var accountDetails = ((AccountManagementService)new AccountManagementService()).GetAccountDetails(account.AccountID, account.AccountType);
                var cardClass = account.AccountType == "SAVING" ? "savings" : account.AccountType == "FIXED-DEPOSIT" ? "fd" : "loan";
                var icon = account.AccountType == "SAVING" ? "piggy-bank" : account.AccountType == "FIXED-DEPOSIT" ? "graph-up-arrow" : "credit-card";
                
                <div class="account-card @cardClass">
                    <h5><i class="bi bi-@icon me-2"></i>@(account.AccountType == "SAVING" ? "Savings Account" : account.AccountType == "FIXED-DEPOSIT" ? "Fixed Deposit" : "Loan Account")</h5>
                    <div class="account-number">@account.AccountID</div>
                    @if (account.AccountType == "SAVING")
                    {
                        <div class="amount">₹ @accountDetails.Balance.ToString("N2")</div>
                        <small>Available Balance</small>
                    }
                    else if (account.AccountType == "FIXED-DEPOSIT")
                    {
                        <div class="amount">₹ @accountDetails.MaturityAmount.ToString("N2")</div>
                        <small>Maturity Amount | @accountDetails.InterestRate% p.a.</small>
                    }
                    else if (account.AccountType == "LOAN")
                    {
                        <div class="amount">₹ @accountDetails.EMI.ToString("N2")</div>
                        <small>Monthly EMI | @accountDetails.InterestRate% p.a.</small>
                    }
                </div>
            }
        }
        else
        {
            <!-- Beautiful Empty State -->
            <div class="col-12">
                <div class="welcome-banner">
                    <h2>👋 Welcome to Your Banking Journey!</h2>
                    <p>You're all set! Let's get you started with your first account.</p>
                    <a href="#contact-branch" class="btn" onclick="showContactInfo(); return false;">
                        <i class="bi bi-building me-2"></i>Visit Nearest Branch
                    </a>
                </div>

                <div class="empty-state">
                    <div class="empty-state-icon">
                        <i class="bi bi-bank2"></i>
                    </div>
                    <h3>No Accounts Yet</h3>
                    <p>
                        You haven't opened any accounts with us yet. Visit your nearest branch or contact our customer service to open a savings account, fixed deposit, or apply for a loan.
                    </p>

                    <div class="empty-state-actions">
                        <div class="empty-state-card">
                            <i class="bi bi-piggy-bank-fill"></i>
                            <h5>Savings Account</h5>
                            <p>Start saving with competitive interest rates and easy access to your money.</p>
                        </div>

                        <div class="empty-state-card">
                            <i class="bi bi-graph-up-arrow"></i>
                            <h5>Fixed Deposit</h5>
                            <p>Grow your wealth with higher interest rates and guaranteed returns.</p>
                        </div>

                        <div class="empty-state-card">
                            <i class="bi bi-credit-card-fill"></i>
                            <h5>Personal Loan</h5>
                            <p>Quick approval and flexible repayment options for all your needs.</p>
                        </div>
                    </div>

                    <div class="mt-4">
                        <button class="btn btn-primary btn-lg" onclick="showContactInfo()">
                            <i class="bi bi-telephone-fill me-2"></i>Contact Customer Service
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Content Sections (Hidden by default) -->
    
    <!-- Profile Section -->
    <div id="profile" class="content-section" style="display: none;">
        <h3><i class="bi bi-person-circle me-2"></i>My Profile</h3>
        
        @if (ViewBag.CustomerProfile != null)
        {
            var profile = (CustomerProfileDTO)ViewBag.CustomerProfile;
            
            <table class="info-table">
                <tr>
                    <td><strong>Customer Name</strong></td>
                    <td>@profile.Custname</td>
                </tr>
                <tr>
                    <td><strong>Customer ID</strong></td>
                    <td>@profile.Custid</td>
                </tr>
                <tr>
                    <td><strong>Date of Birth</strong></td>
                    <td>@(profile.DOB?.ToString("dd/MM/yyyy") ?? "N/A")</td>
                </tr>
                <tr>
                    <td><strong>PAN Number</strong></td>
                    <td>@profile.Pan</td>
                </tr>
                <tr>
                    <td><strong>Phone Number</strong></td>
                    <td>@(profile.PhoneNumber ?? "Not Provided")</td>
                </tr>
                <tr>
                    <td><strong>Address</strong></td>
                    <td>@(profile.Address ?? "Not Provided")</td>
                </tr>
            </table>

            <div class="alert alert-warning mt-3">
                <i class="bi bi-exclamation-triangle me-2"></i>
                <strong>Note:</strong> To update your profile, please visit your nearest branch.
            </div>
        }
    </div>

    <!-- Transfer Funds Section -->
    <div id="transfer" class="content-section" style="display: none;">
        <h3><i class="bi bi-arrow-left-right me-2"></i>Transfer Funds</h3>
        
        @if (ViewBag.CustomerAccounts != null)
        {
            var savingsAccount = ((List<AccountDTO>)ViewBag.CustomerAccounts).FirstOrDefault(a => a.AccountType == "SAVING" && a.Status == "OPEN");
            
            if (savingsAccount != null)
            {
                var accountDetails = ((AccountManagementService)new AccountManagementService()).GetAccountDetails(savingsAccount.AccountID, savingsAccount.AccountType);
                
                <div class="alert alert-info">
                    <strong>Your Account:</strong> @savingsAccount.AccountID<br>
                    <strong>Available Balance:</strong> ? @((accountDetails.Balance - 1000 > 0 ? accountDetails.Balance - 1000 : 0).ToString("N2"))
                    <small class="d-block mt-2">
                        <i class="bi bi-info-circle me-1"></i>
                        Min: ?100 | Max: ?1,00,000 per transaction | Daily Limit: ?5,00,000
                    </small>
                </div>

                <form method="post" action="@Url.Action("TransferFunds", "Dashboard")">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <div class="form-floating">
                                <input name="toAccountId" 
                                       type="text"
                                       class="form-control" 
                                       id="toAccountId"
                                       placeholder="Recipient Account ID"
                                       pattern="SB[0-9]{5}"
                                       maxlength="7"
                                       style="text-transform: uppercase;"
                                       required>
                                <label for="toAccountId">Recipient Account ID (SB00001)</label>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-floating">
                                <input name="amount" 
                                       type="number"
                                       class="form-control" 
                                       id="amount"
                                       placeholder="Amount"
                                       step="0.01"
                                       min="100"
                                       max="100000"
                                       required>
                                <label for="amount">Transfer Amount (?)</label>
                            </div>
                        </div>
                        <div class="col-12">
                            <div class="form-floating">
                                <input name="remarks" 
                                       type="text"
                                       class="form-control" 
                                       id="remarks"
                                       placeholder="Remarks"
                                       maxlength="100">
                                <label for="remarks">Remarks (Optional)</label>
                            </div>
                        </div>
                    </div>
                    
                    <div class="mt-3">
                        <button type="submit" class="btn btn-primary btn-lg" onclick="return confirm('Confirm transfer?');">
                            <i class="bi bi-arrow-right-circle me-2"></i>Transfer Now
                        </button>
                    </div>
                </form>
            }
            else
            {
                <div class="alert alert-warning">
                    <i class="bi bi-exclamation-triangle me-2"></i>
                    <strong>No Active Savings Account!</strong><br>
                    You need an active savings account to transfer funds.
                </div>
            }
        }
    </div>

    <!-- Pay EMI Section -->
    <div id="pay-emi" class="content-section" style="display: none;">
        <h3><i class="bi bi-credit-card me-2"></i>Pay Loan EMI</h3>
        
        @if (ViewBag.CustomerAccounts != null)
        {
            var savingsAccount = ((List<AccountDTO>)ViewBag.CustomerAccounts).FirstOrDefault(a => a.AccountType == "SAVING" && a.Status == "OPEN");
            var loanAccounts = ((List<AccountDTO>)ViewBag.CustomerAccounts).Where(a => a.AccountType == "LOAN" && a.Status == "OPEN").ToList();
            
            if (savingsAccount == null)
            {
                <div class="alert alert-warning">
                    <i class="bi bi-exclamation-triangle me-2"></i>
                    You need a savings account to pay loan EMI.
                </div>
            }
            else if (!loanAccounts.Any())
            {
                <div class="alert alert-info">
                    <i class="bi bi-info-circle me-2"></i>
                    You don't have any active loan accounts.
                </div>
            }
            else
            {
                var savingsDetails = ((AccountManagementService)new AccountManagementService()).GetAccountDetails(savingsAccount.AccountID, savingsAccount.AccountType);
                
                <div class="alert alert-info">
                    <strong>Payment Source:</strong> @savingsAccount.AccountID<br>
                    <strong>Available:</strong> ? @((savingsDetails.Balance - 1000 > 0 ? savingsDetails.Balance - 1000 : 0).ToString("N2"))
                </div>

                foreach (var loan in loanAccounts)
                {
                    var loanDetails = ((AccountManagementService)new AccountManagementService()).GetAccountDetails(loan.AccountID, loan.AccountType);
                    
                    <div class="card mb-3">
                        <div class="card-body">
                            <h5 class="card-title"><i class="bi bi-credit-card me-2"></i>@loan.AccountID</h5>
                            <p class="mb-2">
                                <strong>Loan Amount:</strong> ? @loanDetails.LoanAmount.ToString("N2") | 
                                <strong>Monthly EMI:</strong> ? @loanDetails.EMI.ToString("N2")
                            </p>
                            
                            <form method="post" action="@Url.Action("PayLoanEMI", "Dashboard")">
                                <input type="hidden" name="loanAccountId" value="@loan.AccountID" />
                                
                                <div class="row g-3">
                                    <div class="col-md-6">
                                        <div class="form-floating">
                                            <select name="paymentType" class="form-select" id="paymentType_@loan.AccountID" required>
                                                <option value="EMI">Regular EMI (? @loanDetails.EMI.ToString("N2"))</option>
                                                <option value="PART_PAYMENT">Part Payment</option>
                                                <option value="FULL_CLOSURE">Full Closure</option>
                                            </select>
                                            <label>Payment Type</label>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-floating">
                                            <input name="paymentAmount" 
                                                   type="number"
                                                   class="form-control" 
                                                   id="paymentAmount_@loan.AccountID"
                                                   placeholder="Amount"
                                                   step="0.01"
                                                   min="@loanDetails.EMI"
                                                   value="@loanDetails.EMI"
                                                   required>
                                            <label>Payment Amount (?)</label>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="mt-3">
                                    <button type="submit" class="btn btn-success" onclick="return confirm('Confirm payment?');">
                                        <i class="bi bi-check-circle me-2"></i>Pay Now
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                }
            }
        }
    </div>

    <!-- Transaction History Section -->
    <div id="history" class="content-section" style="display: none;">
        <h3><i class="bi bi-clock-history me-2"></i>Transaction History</h3>
        
        @if (ViewBag.CustomerAccounts != null)
        {
            var savingsAccounts = ((List<AccountDTO>)ViewBag.CustomerAccounts).Where(a => a.AccountType == "SAVING" && a.Status == "OPEN").ToList();
            
            if (savingsAccounts.Any())
            {
                foreach (var account in savingsAccounts)
                {
                    var accountDetails = ((AccountManagementService)new AccountManagementService()).GetAccountDetails(account.AccountID, account.AccountType);
                    
                    <div class="card mb-3">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <h5 class="mb-0">@account.AccountID</h5>
                                    <small class="text-muted">Balance: ? @accountDetails.Balance.ToString("N2")</small>
                                </div>
                                <button class="btn btn-primary" onclick="viewTransactionHistory('@account.AccountID')">
                                    <i class="bi bi-list-ul me-2"></i>View Transactions
                                </button>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="alert alert-info">
                    <i class="bi bi-info-circle me-2"></i>
                    You don't have any active savings accounts.
                </div>
            }
        }
    </div>
</div>

<!-- Transaction Modal -->
<div class="modal fade" id="transactionModal" tabindex="-1">
    <div class="modal-dialog modal-lg modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"><i class="bi bi-clock-history me-2"></i>Transaction History</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p><strong>Account ID:</strong> <span id="modalAccountId"></span></p>
                
                <div id="modalLoading" class="text-center py-5" style="display:none;">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
                
                <div id="modalError" class="alert alert-danger" style="display:none;"></div>
                
                <div id="modalContent">
                    <div id="transactionList"></div>
                    <div id="noTransactions" class="alert alert-info" style="display:none;">
                        No transactions found.
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Contact Modal (for empty state) -->
<div class="modal fade" id="contactModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"><i class="bi bi-telephone-fill me-2"></i>Contact Us</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="text-center mb-4">
                    <div class="empty-state-icon" style="width: 80px; height: 80px; margin: 0 auto 1rem;">
                        <i class="bi bi-headset" style="font-size: 2rem;"></i>
                    </div>
                    <h4>We're Here to Help!</h4>
                    <p class="text-muted">Our team is ready to assist you with opening your first account.</p>
                </div>

                <div class="list-group">
                    <div class="list-group-item">
                        <div class="d-flex align-items-center">
                            <i class="bi bi-telephone-fill text-primary me-3" style="font-size: 1.5rem;"></i>
                            <div>
                                <h6 class="mb-0">Customer Service</h6>
                                <small class="text-muted">1800-XXX-XXXX (Toll Free)</small>
                            </div>
                        </div>
                    </div>

                    <div class="list-group-item">
                        <div class="d-flex align-items-center">
                            <i class="bi bi-envelope-fill text-success me-3" style="font-size: 1.5rem;"></i>
                            <div>
                                <h6 class="mb-0">Email Support</h6>
                                <small class="text-muted">support@bankingsystem.com</small>
                            </div>
                        </div>
                    </div>

                    <div class="list-group-item">
                        <div class="d-flex align-items-center">
                            <i class="bi bi-geo-alt-fill text-danger me-3" style="font-size: 1.5rem;"></i>
                            <div>
                                <h6 class="mb-0">Visit Branch</h6>
                                <small class="text-muted">Find your nearest branch</small>
                            </div>
                        </div>
                    </div>

                    <div class="list-group-item">
                        <div class="d-flex align-items-center">
                            <i class="bi bi-clock-fill text-info me-3" style="font-size: 1.5rem;"></i>
                            <div>
                                <h6 class="mb-0">Working Hours</h6>
                                <small class="text-muted">Mon-Fri: 9:00 AM - 5:00 PM</small>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="alert alert-info mt-4 mb-0">
                    <i class="bi bi-info-circle me-2"></i>
                    <strong>Required Documents:</strong> PAN Card, Aadhaar Card, Address Proof
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        // Show contact info modal
        function showContactInfo() {
            var modal = new bootstrap.Modal(document.getElementById('contactModal'));
            modal.show();
        }

        // Show specific section
        function showSection(sectionId) {
            // Hide all sections
            document.querySelectorAll('.content-section').forEach(function(section) {
                section.style.display = 'none';
            });
            
            // Show selected section
            var section = document.getElementById(sectionId);
            if (section) {
                section.style.display = 'block';
                section.scrollIntoView({ behavior: 'smooth', block: 'start' });
            }
        }

        // View transaction history
        function viewTransactionHistory(accountId) {
            var modal = new bootstrap.Modal(document.getElementById('transactionModal'));
            modal.show();
            
            document.getElementById('modalAccountId').textContent = accountId;
            document.getElementById('modalLoading').style.display = 'block';
            document.getElementById('modalError').style.display = 'none';
            document.getElementById('modalContent').style.display = 'none';
            
            fetch('@Url.Action("GetCustomerTransactionHistory", "Dashboard")?accountId=' + accountId)
                .then(response => response.json())
                .then(data => {
                    document.getElementById('modalLoading').style.display = 'none';
                    document.getElementById('modalContent').style.display = 'block';
                    
                    if (data.success) {
                        var listHtml = '';
                        
                        if (data.data && data.data.length > 0) {
                            document.getElementById('noTransactions').style.display = 'none';
                            data.data.forEach(function(transaction, index) {
                                // Fix: Check actual property name from API response
                                // Try both possible spellings
                                var dateValue = transaction.Transactiondate || transaction.Transationdate;
                                var date = new Date(dateValue);
                                
                                // Validate date
                                if (isNaN(date.getTime())) {
                                    console.error('Invalid date:', dateValue);
                                    // Fallback to current date if invalid
                                    date = new Date();
                                }
                                
                                // Determine if it's a credit or debit
                                var transType = transaction.Transactiontype.toUpperCase();
                                var isCredit = transType.includes('DEPOSIT') || 
                                               transType.includes('CREDIT') || 
                                               transType.includes('TRANSFER_CREDIT');
                                
                                var iconClass = isCredit ? 'bi-arrow-down-circle credit' : 'bi-arrow-up-circle debit';
                                var amountClass = isCredit ? 'credit' : 'debit';
                                var sign = isCredit ? '+' : '-';
                                
                                // Friendly transaction type names
                                var displayType = transaction.Transactiontype;
                                if (transType === 'TRANSFER_DEBIT') {
                                    displayType = 'Transfer Sent';
                                } else if (transType === 'TRANSFER_CREDIT') {
                                    displayType = 'Transfer Received';
                                } else if (transType === 'INITIAL DEPOSIT') {
                                    displayType = 'Initial Deposit';
                                } else if (transType === 'DEPOSIT') {
                                    displayType = 'Deposit';
                                } else if (transType === 'WITHDRAWAL' || transType === 'WITHDRAW') {
                                    displayType = 'Withdrawal';
                                } else if (transType === 'LOAN_PAYMENT') {
                                    displayType = 'Loan EMI Payment';
                                }
                                
                                // Highlight the first (newest) transaction
                                var newestClass = index === 0 ? ' newest' : '';
                                
                                // Format date properly
                                var formattedDate = date.toLocaleDateString('en-GB', { 
                                    day: '2-digit', 
                                    month: 'short', 
                                    year: 'numeric' 
                                });
                                var formattedTime = date.toLocaleTimeString('en-GB', { 
                                    hour: '2-digit', 
                                    minute: '2-digit',
                                    hour12: true
                                });
                                
                                listHtml += `
                                    <div class="transaction-item${newestClass}">
                                        <div class="d-flex align-items-center">
                                            <div class="transaction-icon ${amountClass}">
                                                <i class="bi ${iconClass}"></i>
                                            </div>
                                            <div>
                                                <strong>${displayType}</strong>
                                                ${index === 0 ? '<span class="badge bg-success ms-2">Latest</span>' : ''}
                                                <br>
                                                <small class="text-muted">${formattedDate} ${formattedTime}</small>
                                            </div>
                                        </div>
                                        <div class="transaction-amount ${amountClass}">
                                            ${sign}₹ ${transaction.Amount.toFixed(2)}
                                        </div>
                                    </div>
                                `;
                            });
                            document.getElementById('transactionList').innerHTML = listHtml;
                        } else {
                            document.getElementById('noTransactions').style.display = 'block';
                        }
                    } else {
                        document.getElementById('modalError').textContent = data.message || 'Failed to load transactions';
                        document.getElementById('modalError').style.display = 'block';
                        document.getElementById('modalContent').style.display = 'none';
                    }
                })
                .catch(error => {
                    document.getElementById('modalLoading').style.display = 'none';
                    document.getElementById('modalError').textContent = 'Error: ' + error.message;
                    document.getElementById('modalError').style.display = 'block';
                    document.getElementById('modalContent').style.display = 'none';
                });
        }

        // Auto-dismiss alerts
        setTimeout(function() {
            var alerts = document.querySelectorAll('.alert-dismissible');
            alerts.forEach(function(alert) {
                var bsAlert = new bootstrap.Alert(alert);
                bsAlert.close();
            });
        }, 5000);

        // Auto-show section based on message
        @if (TempData["SuccessMessage"] != null || TempData["ErrorMessage"] != null)
        {
            <text>
            window.addEventListener('load', function() {
                var message = '@Html.Raw(TempData["SuccessMessage"] ?? TempData["ErrorMessage"] ?? "")'.toLowerCase();
                if (message.indexOf('transfer') >= 0) {
                    // For transfer success, show history section and auto-open modal
                    showSection('history');
                    
                    // Wait for section to be visible, then auto-open the transaction modal
                    setTimeout(function() {
                        // Get the first savings account's view button and click it
                        var viewButton = document.querySelector('#history .btn-primary');
                        if (viewButton) {
                            viewButton.click();
                        }
                    }, 500); // Small delay to ensure section is visible
                } else if (message.indexOf('emi') >= 0 || message.indexOf('loan') >= 0 || message.indexOf('payment') >= 0) {
                    showSection('pay-emi');
                }
            });
            </text>
        }
    </script>
}
