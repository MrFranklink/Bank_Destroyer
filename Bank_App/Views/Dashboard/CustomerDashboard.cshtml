@using BankApp.Services
@{
    ViewBag.Title = "Customer Dashboard";
    Layout = "~/Views/Shared/Template.cshtml";
}

<style>
    :root {
        --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        --success-gradient: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
        --danger-gradient: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
        --warning-gradient: linear-gradient(135deg, #fa709a 0%, #fee140 100%);
        --info-gradient: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
    }

    body {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
    }

    .dashboard-header {
        background: var(--success-gradient);
        border-radius: 15px;
        padding: 2rem;
        color: white;
        box-shadow: 0 10px 40px rgba(0,0,0,0.2);
        margin-bottom: 2rem;
    }

    .stat-card {
        background: white;
        border-radius: 15px;
        padding: 1.5rem;
        box-shadow: 0 5px 20px rgba(0,0,0,0.1);
        transition: all 0.3s ease;
        border: none;
        height: 100%;
    }

    .stat-card:hover {
        transform: translateY(-10px);
        box-shadow: 0 15px 40px rgba(0,0,0,0.2);
    }

    .stat-icon {
        width: 70px;
        height: 70px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 2rem;
        margin: 0 auto 1rem;
    }

    .stat-icon.balance {
        background: var(--success-gradient);
    }

    .stat-icon.transactions {
        background: var(--info-gradient);
    }

    .stat-icon.accounts {
        background: var(--warning-gradient);
    }

    .nav-tabs {
        border: none;
        background: white;
        border-radius: 15px 15px 0 0;
        padding: 1rem 1rem 0;
    }

    .nav-tabs .nav-link {
        border: none;
        color: #6c757d;
        font-weight: 600;
        padding: 1rem 1.5rem;
        border-radius: 10px 10px 0 0;
        transition: all 0.3s ease;
    }

    .nav-tabs .nav-link:hover {
        background: #f8f9fa;
        color: #667eea;
    }

    .nav-tabs .nav-link.active {
        background: var(--primary-gradient);
        color: white;
    }

    .tab-content {
        background: white;
        border-radius: 0 0 15px 15px;
        padding: 2rem;
        box-shadow: 0 10px 40px rgba(0,0,0,0.1);
    }

    .account-card {
        background: white;
        border-radius: 15px;
        padding: 1.5rem;
        margin-bottom: 1.5rem;
        box-shadow: 0 5px 20px rgba(0,0,0,0.1);
        transition: all 0.3s ease;
        border-left: 5px solid;
    }

    .account-card.savings {
        border-left-color: #11998e;
    }

    .account-card.fixed-deposit {
        border-left-color: #4facfe;
    }

    .account-card.loan {
        border-left-color: #fa709a;
    }

    .account-card:hover {
        transform: translateX(10px);
        box-shadow: 0 10px 30px rgba(0,0,0,0.15);
    }

    .profile-card {
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        border-radius: 15px;
        padding: 2rem;
        box-shadow: 0 5px 20px rgba(0,0,0,0.1);
    }

    .profile-avatar {
        width: 100px;
        height: 100px;
        border-radius: 50%;
        background: var(--primary-gradient);
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 3rem;
        color: white;
        margin: 0 auto 1rem;
    }

    .info-row {
        background: white;
        border-radius: 10px;
        padding: 1rem;
        margin-bottom: 1rem;
        box-shadow: 0 2px 10px rgba(0,0,0,0.05);
    }

    .btn {
        border-radius: 10px;
        padding: 0.75rem 2rem;
        font-weight: 600;
        transition: all 0.3s ease;
        border: none;
    }

    .btn-primary {
        background: var(--primary-gradient);
    }

    .btn-success {
        background: var(--success-gradient);
    }

    .btn-danger {
        background: var(--danger-gradient);
    }

    .btn-info {
        background: var(--info-gradient);
    }

    .btn:hover {
        transform: translateY(-3px);
        box-shadow: 0 7px 20px rgba(0,0,0,0.2);
    }

    .badge {
        padding: 0.5rem 1rem;
        border-radius: 10px;
        font-weight: 600;
    }

    .modal-header {
        background: var(--primary-gradient);
        color: white;
    }

    .modal-content {
        border-radius: 15px;
        overflow: hidden;
    }

    .transaction-table thead {
        background: var(--primary-gradient);
        color: white;
    }

    .alert {
        border-radius: 10px;
        border: none;
        box-shadow: 0 3px 10px rgba(0,0,0,0.1);
    }

    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .animate-in {
        animation: fadeInUp 0.6s ease;
    }
</style>

<div class="container mt-5 animate-in">
    <!-- Header -->
    <div class="dashboard-header">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h2 class="mb-2"><i class="bi bi-person-circle"></i> Welcome, @ViewBag.UserName!</h2>
                <p class="mb-0 opacity-75">Your banking dashboard at a glance</p>
            </div>
            <div class="text-end">
                <p class="mb-1"><strong>User ID:</strong> @ViewBag.UserID</p>
                <p class="mb-1"><strong>Customer ID:</strong> @ViewBag.ReferenceID</p>
                <span class="badge bg-light text-dark">@ViewBag.Role</span>
                <div class="mt-2">
                    <a href="@Url.Action("ChangePassword", "Dashboard")" class="btn btn-warning btn-sm me-2">
                        <i class="bi bi-key"></i> Change Password
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Alerts - MOVED OUTSIDE TABS -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show animate-in" role="alert">
            <i class="bi bi-check-circle-fill me-2"></i>
            <strong>Success!</strong> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show animate-in" role="alert">
            <i class="bi bi-exclamation-triangle-fill me-2"></i>
            <strong>Error!</strong> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Statistics Cards -->
    <div class="row mb-4 g-4">
        <div class="col-md-4">
            <div class="stat-card">
                <div class="stat-icon balance">
                    <i class="bi bi-wallet2 text-white"></i>
                </div>
                <h3 class="text-center mb-2">? @((ViewBag.SavingsBalance ?? 0m).ToString("N2"))</h3>
                <p class="text-center text-muted mb-0">Savings Balance</p>
            </div>
        </div>
        <div class="col-md-4">
            <div class="stat-card">
                <div class="stat-icon transactions">
                    <i class="bi bi-arrow-left-right text-white"></i>
                </div>
                <h3 class="text-center mb-2">@(ViewBag.TransactionCount ?? 0)</h3>
                <p class="text-center text-muted mb-0">Total Transactions</p>
            </div>
        </div>
        <div class="col-md-4">
            <div class="stat-card">
                <div class="stat-icon accounts">
                    <i class="bi bi-bank text-white"></i>
                </div>
                <h3 class="text-center mb-2">@(ViewBag.TotalAccounts ?? 0)</h3>
                <p class="text-center text-muted mb-0">Active Accounts</p>
            </div>
        </div>
    </div>

    <!-- Tabs -->
    <ul class="nav nav-tabs" id="customerTabs" role="tablist">
        <li class="nav-item">
            <button class="nav-link active" id="overview-tab" data-bs-toggle="tab" data-bs-target="#overview">
                <i class="bi bi-speedometer2"></i> Overview
            </button>
        </li>
        <li class="nav-item">
            <button class="nav-link" id="profile-tab" data-bs-toggle="tab" data-bs-target="#my-profile">
                <i class="bi bi-person-badge"></i> My Profile
            </button>
        </li>
        <li class="nav-item">
            <button class="nav-link" id="accounts-tab" data-bs-toggle="tab" data-bs-target="#my-accounts">
                <i class="bi bi-bank2"></i> My Accounts
            </button>
        </li>
        <li class="nav-item">
            <button class="nav-link" id="transactions-tab" data-bs-toggle="tab" data-bs-target="#transactions-tab-content">
                <i class="bi bi-currency-rupee"></i> Deposit / Withdraw
            </button>
        </li>
        <li class="nav-item">
            <button class="nav-link" id="history-tab" data-bs-toggle="tab" data-bs-target="#history">
                <i class="bi bi-clock-history"></i> Transaction History
            </button>
        </li>
    </ul>

    <div class="tab-content">
        <!-- OVERVIEW TAB -->
        <div class="tab-pane fade show active" id="overview">
            <h5 class="mb-4"><i class="bi bi-speedometer2 text-primary"></i> Quick Overview</h5>
            
            <div class="row">
                <div class="col-md-6 mb-3">
                    <div class="info-row">
                        <h6 class="text-muted mb-2"><i class="bi bi-person"></i> Account Holder</h6>
                        <h5 class="mb-0">@ViewBag.UserName</h5>
                    </div>
                </div>
                <div class="col-md-6 mb-3">
                    <div class="info-row">
                        <h6 class="text-muted mb-2"><i class="bi bi-credit-card"></i> Customer ID</h6>
                        <h5 class="mb-0">@ViewBag.ReferenceID</h5>
                    </div>
                </div>
            </div>

            <div class="row mt-3">
                <div class="col-md-4 mb-3">
                    <div class="info-row text-center">
                        <i class="bi bi-piggy-bank text-success" style="font-size: 2rem;"></i>
                        <h6 class="mt-2 text-muted">Savings Accounts</h6>
                        <h4 class="mb-0">@(ViewBag.CustomerAccounts != null ? ((List<AccountDTO>)ViewBag.CustomerAccounts).Count(a => a.AccountType == "SAVING" && a.Status == "OPEN") : 0)</h4>
                    </div>
                </div>
                <div class="col-md-4 mb-3">
                    <div class="info-row text-center">
                        <i class="bi bi-cash-stack text-info" style="font-size: 2rem;"></i>
                        <h6 class="mt-2 text-muted">Fixed Deposits</h6>
                        <h4 class="mb-0">@(ViewBag.TotalFDAccounts ?? 0)</h4>
                    </div>
                </div>
                <div class="col-md-4 mb-3">
                    <div class="info-row text-center">
                        <i class="bi bi-credit-card text-warning" style="font-size: 2rem;"></i>
                        <h6 class="mt-2 text-muted">Active Loans</h6>
                        <h4 class="mb-0">@(ViewBag.TotalLoanAccounts ?? 0)</h4>
                    </div>
                </div>
            </div>

            <div class="alert alert-info mt-4">
                <i class="bi bi-info-circle"></i> <strong>Need Help?</strong> 
                For any banking queries, please visit your nearest branch or contact customer support at <strong>1800-XXX-XXXX</strong>
            </div>
        </div>

        <!-- MY PROFILE TAB -->
        <div class="tab-pane fade" id="my-profile">
            <h5 class="mb-4"><i class="bi bi-person-badge text-primary"></i> Personal Information</h5>
            
            @if (ViewBag.CustomerProfile != null)
            {
                var profile = (CustomerProfileDTO)ViewBag.CustomerProfile;
                <div class="profile-card">
                    <div class="row">
                        <div class="col-md-3 text-center">
                            <div class="profile-avatar">
                                <i class="bi bi-person"></i>
                            </div>
                            <h5>@profile.Custname</h5>
                            <p class="text-muted">Customer ID: <strong>@profile.Custid</strong></p>
                        </div>
                        <div class="col-md-9">
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <div class="info-row">
                                        <label class="text-muted small"><i class="bi bi-calendar"></i> Date of Birth</label>
                                        <p class="fw-bold mb-0">@(profile.DOB?.ToString("dd/MM/yyyy") ?? "N/A")</p>
                                    </div>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <div class="info-row">
                                        <label class="text-muted small"><i class="bi bi-card-text"></i> PAN Number</label>
                                        <p class="fw-bold mb-0">@profile.Pan</p>
                                    </div>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <div class="info-row">
                                        <label class="text-muted small"><i class="bi bi-telephone"></i> Phone Number</label>
                                        <p class="fw-bold mb-0">@(profile.PhoneNumber ?? "Not Provided")</p>
                                    </div>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <div class="info-row">
                                        <label class="text-muted small"><i class="bi bi-geo-alt"></i> Address</label>
                                        <p class="fw-bold mb-0">@(profile.Address ?? "Not Provided")</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="alert alert-warning mt-4">
                    <i class="bi bi-exclamation-triangle"></i> <strong>Note:</strong> 
                    To update your profile information, please visit your nearest branch with valid ID proof.
                </div>
            }
        </div>

        <!-- MY ACCOUNTS TAB -->
        <div class="tab-pane fade" id="my-accounts">
            <h5 class="mb-4"><i class="bi bi-bank2 text-primary"></i> All My Accounts</h5>
            
            @if (ViewBag.CustomerAccounts != null && ((List<AccountDTO>)ViewBag.CustomerAccounts).Count > 0)
            {
                foreach (var account in (List<AccountDTO>)ViewBag.CustomerAccounts)
                {
                    var accountDetails = ((AccountManagementService)new AccountManagementService()).GetAccountDetails(account.AccountID, account.AccountType);
                    
                    <div class="account-card @(account.AccountType == "SAVING" ? "savings" : account.AccountType == "FIXED-DEPOSIT" ? "fixed-deposit" : "loan")">
                        <div class="row align-items-center">
                            <div class="col-md-2 text-center">
                                @if (account.AccountType == "SAVING")
                                {
                                    <i class="bi bi-piggy-bank" style="font-size: 3rem; color: #11998e;"></i>
                                    <h6 class="mt-2">Savings</h6>
                                }
                                else if (account.AccountType == "FIXED-DEPOSIT")
                                {
                                    <i class="bi bi-cash-stack" style="font-size: 3rem; color: #4facfe;"></i>
                                    <h6 class="mt-2">Fixed Deposit</h6>
                                }
                                else if (account.AccountType == "LOAN")
                                {
                                    <i class="bi bi-credit-card" style="font-size: 3rem; color: #fa709a;"></i>
                                    <h6 class="mt-2">Loan</h6>
                                }
                            </div>
                            
                            <div class="col-md-7">
                                <h5 class="mb-2">
                                    <strong>@account.AccountID</strong>
                                    @if (account.Status == "OPEN")
                                    {
                                        <span class="badge bg-success ms-2">Active</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary ms-2">Closed</span>
                                    }
                                </h5>
                                
                                @if (account.AccountType == "SAVING")
                                {
                                    <p class="mb-1"><strong>Current Balance:</strong> <span class="text-success">? @accountDetails.Balance.ToString("N2")</span></p>
                                }
                                else if (account.AccountType == "FIXED-DEPOSIT")
                                {
                                    <p class="mb-1"><strong>Deposit Amount:</strong> ? @accountDetails.Amount.ToString("N2")</p>
                                    <p class="mb-1"><strong>Maturity Amount:</strong> <span class="text-success">? @accountDetails.MaturityAmount.ToString("N2")</span></p>
                                    <p class="mb-1"><strong>Interest Rate:</strong> @accountDetails.InterestRate% | <strong>Maturity Date:</strong> @accountDetails.EndDate?.ToString("dd/MM/yyyy")</p>
                                }
                                else if (account.AccountType == "LOAN")
                                {
                                    <p class="mb-1"><strong>Loan Amount:</strong> ? @accountDetails.LoanAmount.ToString("N2")</p>
                                    <p class="mb-1"><strong>Monthly EMI:</strong> <span class="text-danger">? @accountDetails.EMI.ToString("N2")</span></p>
                                    <p class="mb-1"><strong>Interest Rate:</strong> @accountDetails.InterestRate% | <strong>Tenure:</strong> @accountDetails.Tenure months</p>
                                }
                                
                                <p class="mb-0 text-muted small">
                                    <i class="bi bi-calendar-check"></i> Opened on @account.OpenDate.ToString("dd/MM/yyyy")
                                </p>
                            </div>
                            
                            <div class="col-md-3 text-end">
                                @if (account.AccountType == "SAVING" && account.Status == "OPEN")
                                {
                                    <button type="button" class="btn btn-info btn-sm" onclick="viewTransactionHistory('@account.AccountID')">
                                        <i class="bi bi-clock-history"></i> View History
                                    </button>
                                }
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="alert alert-info">
                    <i class="bi bi-info-circle"></i> You don't have any accounts yet. Please visit your nearest branch to open an account.
                </div>
            }
        </div>

        <!-- DEPOSIT/WITHDRAW TAB -->
        <div class="tab-pane fade" id="transactions-tab-content">
            <h5 class="mb-4"><i class="bi bi-currency-rupee text-primary"></i> Deposit / Withdraw Money</h5>
            
            @if (ViewBag.CustomerAccounts != null)
            {
                var savingsAccount = ((List<AccountDTO>)ViewBag.CustomerAccounts).FirstOrDefault(a => a.AccountType == "SAVING" && a.Status == "OPEN");
                
                if (savingsAccount != null)
                {
                    var accountDetails = ((AccountManagementService)new AccountManagementService()).GetAccountDetails(savingsAccount.AccountID, savingsAccount.AccountType);
                    
                    <div class="account-card savings mb-4">
                        <div class="row align-items-center">
                            <div class="col-md-2 text-center">
                                <i class="bi bi-piggy-bank" style="font-size: 3rem; color: #11998e;"></i>
                            </div>
                            <div class="col-md-10">
                                <h5><strong>@savingsAccount.AccountID</strong> <span class="badge bg-success">Active</span></h5>
                                <p class="mb-1"><strong>Current Balance:</strong> <span class="text-success h4">? @accountDetails.Balance.ToString("N2")</span></p>
                                <p class="mb-0 text-muted small"><i class="bi bi-info-circle"></i> Minimum balance: ? 1,000 must be maintained</p>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <!-- Deposit Section -->
                        <div class="col-md-6 mb-3">
                            <div class="card border-success">
                                <div class="card-header text-white" style="background: var(--success-gradient);">
                                    <h6 class="mb-0"><i class="bi bi-arrow-down-circle"></i> Deposit Money</h6>
                                </div>
                                <div class="card-body">
                                    <div class="alert alert-info mb-3">
                                        <small><i class="bi bi-info-circle"></i> <strong>Business Rules:</strong></small>
                                        <ul class="mb-0 mt-1 small">
                                            <li>Minimum deposit: ? 100</li>
                                            <li>Transaction recorded instantly</li>
                                        </ul>
                                    </div>
                                    
                                    <form method="post" action="@Url.Action("CustomerDeposit", "Dashboard")">
                                        <div class="mb-3">
                                            <label class="form-label"><i class="bi bi-currency-rupee"></i> Deposit Amount *</label>
                                            <input name="amount" type="number" step="0.01" min="100" class="form-control" placeholder="Enter amount (Min: ? 100)" required />
                                        </div>
                                        <button type="submit" class="btn btn-success w-100">
                                            <i class="bi bi-check-circle"></i> Deposit Now
                                        </button>
                                    </form>
                                </div>
                            </div>
                        </div>

                        <!-- Withdraw Section -->
                        <div class="col-md-6 mb-3">
                            <div class="card border-danger">
                                <div class="card-header text-white" style="background: var(--danger-gradient);">
                                    <h6 class="mb-0"><i class="bi bi-arrow-up-circle"></i> Withdraw Money</h6>
                                </div>
                                <div class="card-body">
                                    <div class="alert alert-warning mb-3">
                                        <small><i class="bi bi-exclamation-triangle"></i> <strong>Business Rules:</strong></small>
                                        <ul class="mb-0 mt-1 small">
                                            <li>Minimum withdrawal: ? 100</li>
                                            <li>Minimum balance of ? 1,000 must be maintained</li>
                                            <li>Transaction recorded instantly</li>
                                        </ul>
                                    </div>
                                    
                                    <form method="post" action="@Url.Action("CustomerWithdraw", "Dashboard")">
                                        <div class="mb-3">
                                            <label class="form-label"><i class="bi bi-currency-rupee"></i> Withdrawal Amount *</label>
                                            <input name="amount" type="number" step="0.01" min="100" max="@(accountDetails.Balance - 1000)" class="form-control" placeholder="Enter amount (Min: ? 100)" required />
                                            <small class="text-muted">Maximum: ? @((accountDetails.Balance - 1000 > 0 ? accountDetails.Balance - 1000 : 0).ToString("N2"))</small>
                                        </div>
                                        <button type="submit" class="btn btn-danger w-100" onclick="return confirm('Confirm withdrawal?');">
                                            <i class="bi bi-check-circle"></i> Withdraw Now
                                        </button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <div class="alert alert-warning">
                        <i class="bi bi-exclamation-triangle"></i> <strong>No Active Savings Account!</strong><br>
                        You don't have an active savings account. Please visit your nearest branch to open one.
                    </div>
                }
            }
        </div>

        <!-- TRANSACTION HISTORY TAB -->
        <div class="tab-pane fade" id="history">
            <h5 class="mb-4"><i class="bi bi-clock-history text-primary"></i> Recent Transactions</h5>
            
            @if (ViewBag.CustomerAccounts != null)
            {
                var savingsAccounts = ((List<AccountDTO>)ViewBag.CustomerAccounts).Where(a => a.AccountType == "SAVING" && a.Status == "OPEN").ToList();
                
                if (savingsAccounts.Any())
                {
                    <div class="alert alert-info mb-4">
                        <i class="bi bi-info-circle"></i> Select an account to view its transaction history
                    </div>
                    
                    foreach (var account in savingsAccounts)
                    {
                        <div class="account-card savings mb-3">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <h6 class="mb-1"><i class="bi bi-piggy-bank"></i> Savings Account</h6>
                                    <p class="mb-0"><strong>Account ID:</strong> @account.AccountID</p>
                                </div>
                                <button type="button" class="btn btn-primary" onclick="viewTransactionHistory('@account.AccountID')">
                                    <i class="bi bi-eye"></i> View Transactions
                                </button>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="alert alert-warning">
                        <i class="bi bi-exclamation-triangle"></i> You don't have any active savings accounts to view transactions.
                    </div>
                }
            }
        </div>
    </div>

    <!-- Logout Button -->
    <div class="mt-5 text-center">
        <a href="@Url.Action("Logout", "Auth")" class="btn btn-danger btn-lg">
            <i class="bi bi-box-arrow-right"></i> Logout
        </a>
    </div>
</div>

<!-- Transaction History Modal -->
<div class="modal fade" id="transactionHistoryModal" tabindex="-1" aria-labelledby="transactionHistoryModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="transactionHistoryModalLabel">
                    <i class="bi bi-clock-history"></i> Transaction History
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="transactionHistoryLoading" class="text-center" style="display: none;">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p class="mt-2 text-muted">Loading transaction history...</p>
                </div>
                
                <div id="transactionHistoryError" class="alert alert-danger" style="display: none;">
                    <i class="bi bi-exclamation-triangle"></i> <span id="transactionHistoryErrorMessage"></span>
                </div>
                
                <div id="transactionHistoryContent">
                    <div class="mb-3">
                        <strong>Account ID:</strong> <span id="historyAccountId" class="text-primary"></span>
                    </div>
                    
                    <div class="table-responsive">
                        <table class="table table-hover transaction-table">
                            <thead>
                                <tr>
                                    <th>#</th>
                                    <th>Date</th>
                                    <th>Type</th>
                                    <th>Amount (?)</th>
                                </tr>
                            </thead>
                            <tbody id="transactionTableBody">
                                <!-- Transactions will be loaded here via AJAX -->
                            </tbody>
                        </table>
                    </div>
                    
                    <div id="noTransactionsMessage" class="alert alert-info text-center" style="display: none;">
                        <i class="bi bi-info-circle"></i> No transactions found for this account.
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="bi bi-x-circle"></i> Close
                </button>
            </div>
        </div>
    </div>
</div>

<script>
    // Add animation to cards on load
    document.addEventListener('DOMContentLoaded', function() {
        const cards = document.querySelectorAll('.stat-card, .account-card, .info-row');
        cards.forEach((card, index) => {
            setTimeout(() => {
                card.style.animation = `fadeInUp 0.6s ease ${index * 0.05}s both`;
            }, 100);
        });

        // Check if we should auto-switch to transactions tab
        @if (TempData["SuccessMessage"] != null || TempData["ErrorMessage"] != null)
        {
            @:// Auto-switch to Deposit/Withdraw tab if there's a message
            @:var transactionsTab = document.getElementById('transactions-tab');
            @:if (transactionsTab) {
                @:var tab = new bootstrap.Tab(transactionsTab);
                @:tab.show();
            @:}
        }
    });
    
    // Function to view transaction history
    function viewTransactionHistory(accountId) {
        const modal = new bootstrap.Modal(document.getElementById('transactionHistoryModal'));
        
        document.getElementById('historyAccountId').textContent = accountId;
        document.getElementById('transactionHistoryLoading').style.display = 'block';
        document.getElementById('transactionHistoryError').style.display = 'none';
        document.getElementById('transactionHistoryContent').style.display = 'none';
        document.getElementById('noTransactionsMessage').style.display = 'none';
        
        modal.show();
        
        // Fetch transaction history via AJAX
        fetch('@Url.Action("GetCustomerTransactionHistory", "Dashboard")?accountId=' + encodeURIComponent(accountId), {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json'
            }
        })
        .then(response => response.json())
        .then(data => {
            document.getElementById('transactionHistoryLoading').style.display = 'none';
            document.getElementById('transactionHistoryContent').style.display = 'block';
            
            if (data.success) {
                const transactions = data.data;
                const tbody = document.getElementById('transactionTableBody');
                tbody.innerHTML = '';
                
                if (transactions && transactions.length > 0) {
                    transactions.forEach((transaction, index) => {
                        const row = tbody.insertRow();
                        
                        const cell1 = row.insertCell(0);
                        cell1.textContent = index + 1;
                        
                        const cell2 = row.insertCell(1);
                        const date = transaction.Transationdate ? new Date(transaction.Transationdate) : null;
                        cell2.textContent = date ? date.toLocaleDateString('en-GB') + ' ' + date.toLocaleTimeString('en-GB', { hour: '2-digit', minute: '2-digit' }) : 'N/A';
                        
                        const cell3 = row.insertCell(2);
                        const type = transaction.Transactiontype || 'N/A';
                        if (type.toUpperCase() === 'DEPOSIT') {
                            cell3.innerHTML = '<span class="badge bg-success"><i class="bi bi-arrow-down-circle"></i> Deposit</span>';
                        } else if (type.toUpperCase() === 'WITHDRAW') {
                            cell3.innerHTML = '<span class="badge bg-danger"><i class="bi bi-arrow-up-circle"></i> Withdraw</span>';
                        } else {
                            cell3.innerHTML = '<span class="badge bg-secondary">' + type + '</span>';
                        }
                        
                        const cell4 = row.insertCell(3);
                        const amount = transaction.Amount || 0;
                        cell4.textContent = '? ' + amount.toLocaleString('en-IN', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
                        if (type.toUpperCase() === 'DEPOSIT') {
                            cell4.style.color = 'green';
                            cell4.style.fontWeight = 'bold';
                        } else if (type.toUpperCase() === 'WITHDRAW') {
                            cell4.style.color = 'red';
                            cell4.style.fontWeight = 'bold';
                        }
                    });
                } else {
                    document.getElementById('noTransactionsMessage').style.display = 'block';
                }
            } else {
                document.getElementById('transactionHistoryError').style.display = 'block';
                document.getElementById('transactionHistoryErrorMessage').textContent = data.message || 'Failed to load transaction history';
                document.getElementById('transactionHistoryContent').style.display = 'none';
            }
        })
        .catch(error => {
            document.getElementById('transactionHistoryLoading').style.display = 'none';
            document.getElementById('transactionHistoryError').style.display = 'block';
            document.getElementById('transactionHistoryErrorMessage').textContent = 'Failed to load transaction history: ' + error.message;
            document.getElementById('transactionHistoryContent').style.display = 'none';
            console.error('Error fetching transaction history:', error);
        });
    }
</script>
